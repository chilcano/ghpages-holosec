PROXY APACHE TO ALFRESCO 34D
=============================


kns.konosys.es -> 176.9.30.36:80

kns-alfr0.knsdomain.local -> 10.10.10.14:8080 ctx=/alfresco y ctx=/share


0. Install Apache modules:
---------------------------

root@kns /etc/apache2 # apt-get install apache2.2-common

0. Enable Apache modules (mod_proxy):
--------------------------------------

root@kns /etc/apache2 # /etc/init.d/apache2 reload
Syntax error on line 3 of /etc/apache2/sites-enabled/kns-lamp1-miki.conf:
Invalid command 'ProxyPass', perhaps misspelled or defined by a module not included in the server configuration
Action 'configtest' failed.
The Apache error log may have more information.
 failed!

If you get an error as above, then enable module mod_proxy:

root@kns /etc/apache2 # a2enmod proxy


0. Enable Apache modules (mod_proxy_http):
------------------------------------------
----
[warn] proxy: No protocol handler was valid for the URL /. If you are using a DSO version of mod_proxy, make sure the proxy submodules are included in the configuration using LoadModule.
----
If you get an error as above, then enable module mod_proxy_http

root@kns /etc/apache2 # a2enmod proxy_http


1. Create a new virtual host file for Alfresco: 
------------------------------------------------

root@kns ~ # nano /etc/apache2/sites-available/kns-alfr0-alfr34d.conf

<VirtualHost *:8014>
  ProxyPreserveHost On
  ProxyPass / http://10.10.10.14:8080/
  ProxyPassReverse / http://10.10.10.14:8080/
  ServerName  www.konosys.es

  # Logfiles
  ErrorLog  /root/knsapache2/kns-alfr0-alfr34d/logs/error.log
  CustomLog /root/knsapache2/kns-alfr0-alfr34d/logs/access.log combined
</VirtualHost>

2. Add new ports for this virtual host
--------------------------------------

nano /etc/apache2/ports.conf

---
NameVirtualHost *:80
Listen 80

#konosys: new port 8080 for pve web
#NameVirtualHost *.8080
#Listen 8080

#kns-lamp1-miki
NameVirtualHost *:8013
Listen 8013

<IfModule mod_ssl.c>
    Listen 8443
</IfModule>

<IfModule mod_gnutls.c>
    Listen 8443
</IfModule>

### kns-alfr0 ########
NameVirtualHost *:8014
Listen 8014
----


3. Enable new site (virtual host)
---------------------------------

root@kns ~ # a2ensite kns-alfr0-alfr34d.conf
Enabling site kns-alfr0-alfr34d.conf.
Run '/etc/init.d/apache2 reload' to activate new configuration!

4. root@kns ~ # ./etc/init.d/apache2 reload
-------------------------------------------

5. Check logs here:
-------------------

root@kns /etc/apache2 # tail -f /root/knsapache2/kns-alfr0-alfr34d/logs/error.log 

----
[Tue Feb 07 11:17:11 2012] [error] (113)No route to host: proxy: HTTP: attempt to connect to 10.10.10.14:8080 (10.10.10.14) failed
[Tue Feb 07 11:17:11 2012] [error] ap_proxy_connect_backend disabling worker for (10.10.10.14)
[Tue Feb 07 11:17:11 2012] [error] proxy: HTTP: disabled connection for (10.10.10.14)
----

or

root@kns ~ # telnet kns-alfr0 8080
Trying 10.10.10.14...
telnet: Unable to connect to remote host: No route to host


If you have these above errors, that is because the firewall of remote host (kns-alfr0) is rejecting incoming connections, 
to solve this do following in remote host (kns-alfr0):

**** Check iptables rules in destination host, in this case is 10.10.10.14 with port 8080 from 10.10.10.1

[root@kns-alfr0 ~]# iptables -L --line-numbers
Chain INPUT (policy ACCEPT)
num  target     prot opt source               destination         
1    ACCEPT     all  --  anywhere             anywhere            state RELATED,ESTABLISHED 
2    ACCEPT     icmp --  anywhere             anywhere            
3    ACCEPT     all  --  anywhere             anywhere            
4    ACCEPT     tcp  --  anywhere             anywhere            state NEW tcp dpt:ssh 
5    ACCEPT     tcp  --  anywhere             anywhere            tcp dpt:8009 
6    REJECT     all  --  anywhere             anywhere            reject-with icmp-host-prohibited 

Chain FORWARD (policy ACCEPT)
num  target     prot opt source               destination         
1    REJECT     all  --  anywhere             anywhere            reject-with icmp-host-prohibited 

Chain OUTPUT (policy ACCEPT)
num  target     prot opt source               destination         
[root@kns-alfr0 ~]#   

**** Add iptables rule in INPUT table, row 6:

[root@kns-alfr0 ~]# iptables -I INPUT 6 -p tcp -s 10.10.10.1 --dport 8080 -j ACCEPT


--> to access to 7070 port (sharepoint protocol) do following:
[root@kns-alfr0 ~]# iptables -I INPUT 7 -p tcp -s 10.10.10.1 --dport 7070 -j ACCEPT

--> to make persistent the iptables rules do :
--> info: https://help.ubuntu.com/community/IptablesHowTo

[root@kns-alfr0 ~]# iptables-save 
or 
[root@kns-alfr0 ~]# iptables-restore


**** Again, to check iptables:

[root@kns-alfr0 ~]# iptables -L --line-numbers
Chain INPUT (policy ACCEPT)
num  target     prot opt source               destination         
1    ACCEPT     all  --  anywhere             anywhere            state RELATED,ESTABLISHED 
2    ACCEPT     icmp --  anywhere             anywhere            
3    ACCEPT     all  --  anywhere             anywhere            
4    ACCEPT     tcp  --  anywhere             anywhere            state NEW tcp dpt:ssh 
5    ACCEPT     tcp  --  anywhere             anywhere            tcp dpt:8009 
6    ACCEPT     tcp  --  10.10.10.1           anywhere            tcp dpt:webcache 
7    REJECT     all  --  anywhere             anywhere            reject-with icmp-host-prohibited 

Chain FORWARD (policy ACCEPT)
num  target     prot opt source               destination         
1    REJECT     all  --  anywhere             anywhere            reject-with icmp-host-prohibited 

Chain OUTPUT (policy ACCEPT)
num  target     prot opt source               destination         
[root@kns-alfr0 ~]# 

*** TIP: Delete iptables rule:

[root@kns-alfr0 ~]# iptables -D INPUT 7

this deletes rule number 7 of table INPUT.

--------------------
