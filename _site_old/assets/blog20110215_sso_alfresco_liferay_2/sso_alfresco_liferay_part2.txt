SSO Alfresco - Liferay part 2/2
============================================

Diagram:
------------


----- screenshot/ppt

Requirements:
--------------

1. LDAP server and CAS-server version 3.3.5:
I will use existing CentOS VirtualBox VM with CAS and Penrose Server pre-configured (Virtual Directory/LDAP) named "directorysrv1" of last blog post (<a href="http://holisticsecurity.wordpress.com/2011/01/15/sso-liferay-alfresco-cas-penrose-part-12/">Web-SSO between Liferay and Alfresco with CAS and Penrose (part 1/2)</a>) but with a few changes:


--- screen shot of ldap tree


2. Keembay filter for CAS:

3. Alfresco 3.4c CE:
We are using a new WinXP VirtualBox VM with Alfresco and MySQL installed named "alfr01".

4. Liferay with LDAP and CAS enabled:

--- screen shot of liferay auth + cas


------------ NO ------
CREATE VIEW 
	employees.employees_view 
AS
SELECT 
	emp_no, 
	birth_date, 
	first_name, 
	last_name, 
	gender, 
	hire_date, 
	"﻿qUqP5cyxm6YcTAhz05Hph5gvu9M=" as pwd_sha1 
FROM employees;
------------
see partition in penrose
------------- NO ----------

(&(cn=A*)(objectClass=person))
ou=Employees,dc=intix,dc=info
----------- NO -------


<h2>I. Enable LDAP Authentication and LDAP users import in Alfresco</h2>


To do Web-SSO is not necessary this step, but i recommend to do it because you can do users management from Alfresco Admin Console (Browser/Explorer or Share) (edit, delete, to do groups and give permissions).

1. Create the following folders in "\subsystems\Authentication\ldap\ldap1" in ﻿${ALF_HOME}\tomcat\shared\classes\alfresco\extension

2. Copy the file ﻿${ALF_HOME}\tomcat\webapps\alfresco\WEB-INF\classes\alfresco\subsystems\Authentication\ldap\﻿ldap-authentication.properties in the folder before created.

3. Modify ldap-authentication.properties enabling LDAP authN and sync. For example, you can use my file (this only works for my LDAP tree with UID as RDN and authN with CN):

[sourcecode language="text" gutter="true" wraplines="false"]

[/sourcecode]

4. Re-start Alfresco.

5. Test LDAP authN and import of users in Alfresco.

------ screenshot


II. Configure the CAS Client Filter to Alfresco
-----

We are setting up Alfresco so that when someone log into Alfresco, it is redirected to CAS for authentication.

Through the CAS filter, Alfresco catchs any request to access and these are redirected to CAS for authentication.

1. Edit the alfresco web.xml to add the CAS filter definition.


----
﻿c:\>notepad++ C:\1bpms-demo\alfr34c_1\tomcat\webapps\alfresco\WEB-INF\web.xml
---


-----
﻿ <!-- Step 1/2: Begin, add CAS urls -->  
 <filter>
     <filter-name>CAS Filter</filter-name>
     <filter-class>edu.yale.its.tp.cas.client.filter.CASFilter</filter-class>
     <init-param>
         <param-name>edu.yale.its.tp.cas.client.filter.loginUrl</param-name>
         <param-value>https://directorysrv1:8443/cas-server-webapp-3.3.5/login</param-value>
     </init-param>
     <init-param>
         <param-name>edu.yale.its.tp.cas.client.filter.validateUrl</param-name>
         <param-value>https://directorysrv1:8443/cas-server-webapp-3.3.5/serviceValidate</param-value>
     </init-param>
     <init-param>
         <param-name>edu.yale.its.tp.cas.client.filter.serverName</param-name>
         <param-value>alfr01:8080</param-value>
     </init-param>
 </filter>

 <filter-mapping>
     <filter-name>CAS Filter</filter-name>
     <url-pattern>/*</url-pattern>
 </filter-mapping>
 <!-- End of CAS urls --> 
-----


2. Copy the CAS client jar file into the alfresco webapp lib folder.

----
﻿c:\>
c:\>copy C:\0share1\casclient.jar C:\1bpms-demo\alfr34c_1\tomcat\webapps\alfresco\WEB-INF\lib\cas-client-2.1.1.jar
        1 archivos copiados.

c:\>
----

3. If you have get this error (see figure below) is because you have not installed the CAS root SSL Cert as a trusted certificate in Alfresco (JRE's cacert store). Alfresco 3.4c CE has JRE's cacert store in ${ALF_HOME}/java/jre/lib/sec, then install the certificate there.


----- screenshot

To solve it, you should import CAS server SSL public certificate in the JRE's cacerts where Alfresco is running, in my case I have Alfresco running in WinXP box called “alfr01″.

-------
c:\>keytool -import -alias tomcat -file c:\0share1\directorysrv1_730days.crt -keystore C:\1bpms-demo\alf34c_1\java\jre\lib\sec
y\cacerts
Enter keystore password:
Owner: CN=directorysrv1, OU="INTIX I+D", O=INTIX.info, L=BARCELONA, ST=CATALUNYA, C=ES
Issuer: CN=directorysrv1, OU="INTIX I+D", O=INTIX.info, L=BARCELONA, ST=CATALUNYA, C=ES
Serial number: 4d1df9bc
Valid from: Fri Dec 31 16:41:48 GMT+01:00 2010 until: Sun Dec 30 16:41:48 GMT+01:00 2012
Certificate fingerprints:
         MD5:  11:4D:72:BB:80:42:EE:F7:4A:CA:E9:EA:F6:4F:86:8D
         SHA1: 7F:6B:12:64:31:8B:47:4E:11:33:D7:FE:EF:C6:D4:65:12:59:8D:2E
         Signature algorithm name: SHA1withRSA
         Version: 3
Trust this certificate? [no]:  yes
Certificate was added to keystore

-------------

4. Test CAS configuration. 
Try opening an Alfresco's page, for example: http://alfr01:8080/alfresco in a browser. You should be redirected to the CAS login page, and when you log in (for example with aamodwroclawski/test) you should be redirected back to the My Alfresco Dashboard.

If this happens you have successfully protected alfresco resource with CAS, but you do not yet have SSO, neither do authenticated.

Note:
- The authentication subsystems in Alfresco 3.4c CE have changed, the next section III is only for 3.2.x versions. I have not tested with 3.3.x.
- If you want to do SSO and automatic redirection when loggin to Alfresco after authentication in CAS, you should create a CAS Authentication Filter as Keembay filter (http://keembay.com/alfresco/extras/CASAuthenticationFilter.java) and adapt to 3.4c version.

III. Configuring SSO in Alfresco (only for 3.2.x).
------

When someone has successfully authenticated to CAS and it has been redirected to the My Alfresco Dashboard, Alfresco will need to retrieve the values of session which is placed there by the CAS Filter.

To do this you have to modify the Java code that is executed when logging to Alfresco page (org.alfresco.web.app.servlet.AuthenticationFilter). This disables the form based login page of Alfresco too.

The new filter is: com.keembay.alfresco.web.app.servlet.CASAuthenticationFilter

1. Update "Authentication Filter" (﻿org.alfresco.repo.web.filter.beans.BeanProxyFilter) with the new one (com.keembay.alfresco.web.app.servlet.CASAuthenticationFilter) in <ALF_HOME>\tomcat\webapps\alfresco\WEB-INF\web.xml to become:


------
﻿   <!-- Step 2/2: Begin, comment existing filter and add new CAS filter -->
   <!-- Only for 3.2.x version                                          -->
   <!--filter>
      <filter-name>Authentication Filter</filter-name>
      <description>Authentication filter mapped only to faces URLs. Other URLs generally use proprietary means to talk to the AuthenticationComponent</description>
      <filter-class>org.alfresco.repo.web.filter.beans.BeanProxyFilter</filter-class>
      <init-param>
         <param-name>beanName</param-name>
         <param-value>AuthenticationFilter</param-value>
      </init-param>
   </filter-->

   <filter>
      <filter-name>Authentication Filter</filter-name>   
	  <filter-class>com.keembay.alfresco.web.app.servlet.CASAuthenticationFilter</filter-class>
      <init-param>
        <param-name>cas.user.label</param-name>
        <param-value>edu.yale.its.tp.cas.client.filter.user</param-value>
      </init-param> 
   </filter>
   <!-- End new CAS filter -->
------



2. Copy the CAS Authentication Filter jar file (keembay-alfresco-cas.jar) into the classpath:

--------
﻿c:\>copy C:\0share1\keembay-alfresco-cas.jar C:\1bpms-demo\alfr34c_1\tomcat\webapps\alfresco\WEB-INF\lib
        1 archivos copiados.

c:\>
--------

3. Re-start Alfresco.

IV. Test Web Single Sign On between Liferay 6.0.5 CE and Alfresco 3.4.c CE:
--------

Open a browser with http://alfr01:8080/alfresco, you get redirected to CAS as before. Enter aamodwroclawski/test and you should be redirected to Alfresco login page, enter again aamodwroclawski/test, you should be get into Alfresco (authenticated). In this time you should see Logout (aamodwroclawski) in the top right of the Alfresco page indicating that you have sucessfully logged in.

Then, open other browser with http://lfry01:8080/intixportal/user/aamodwroclawski, you get redirected to Liferay private and authenticated page for the user "aamodwroclawski".

In other direction (Liferay to Alfresco) it does not work because Alfresco 3.4.c can not get authenticated session values and does a validation of CAS Ticket. For this works, as I said above, you should create a Authentication CAS filter.

------- screenshot


V. Conclusions:
-------------

1. Authentication and users sync in Alfresco 3.4c does work.

2. SSO with CAS in Alfresco 3.4c does not work, it is necessary create a CAS Authentication filter as Keembay filter (http://keembay.com/alfresco/extras/CASAuthenticationFilter.java)

3. If you follow the Alfresco wiki page (http://wiki.alfresco.com/wiki/Central_Authentication_Service_Configuration), Keembay filter should work (Authentication and SSO) with Alfresco 3.2.x.


END


References:
------------
1. CAS in Alfresco
http://wiki.alfresco.com/wiki/Central_Authentication_Service_Configuration

2. Keembay CAS Authentication Filter (compiled for Java 1.5 against the Alfresco 2.1 CE so it should work for you)
http://keembay.com/alfresco/extras/keembay-alfresco-cas.jar